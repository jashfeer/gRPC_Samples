// Code generated by protoc-gen-go. DO NOT EDIT.
// source: processor_message.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CPU struct {
	Brand                string   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NumberCores          uint32   `protobuf:"varint,3,opt,name=number_cores,json=numberCores,proto3" json:"number_cores,omitempty"`
	NumberThreads        uint32   `protobuf:"varint,4,opt,name=number_threads,json=numberThreads,proto3" json:"number_threads,omitempty"`
	MinGhz               float64  `protobuf:"fixed64,5,opt,name=min_ghz,json=minGhz,proto3" json:"min_ghz,omitempty"`
	MaxGhz               float64  `protobuf:"fixed64,6,opt,name=max_ghz,json=maxGhz,proto3" json:"max_ghz,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPU) Reset()         { *m = CPU{} }
func (m *CPU) String() string { return proto.CompactTextString(m) }
func (*CPU) ProtoMessage()    {}
func (*CPU) Descriptor() ([]byte, []int) {
	return fileDescriptor_466578cecc6db379, []int{0}
}

func (m *CPU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPU.Unmarshal(m, b)
}
func (m *CPU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPU.Marshal(b, m, deterministic)
}
func (m *CPU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPU.Merge(m, src)
}
func (m *CPU) XXX_Size() int {
	return xxx_messageInfo_CPU.Size(m)
}
func (m *CPU) XXX_DiscardUnknown() {
	xxx_messageInfo_CPU.DiscardUnknown(m)
}

var xxx_messageInfo_CPU proto.InternalMessageInfo

func (m *CPU) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *CPU) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CPU) GetNumberCores() uint32 {
	if m != nil {
		return m.NumberCores
	}
	return 0
}

func (m *CPU) GetNumberThreads() uint32 {
	if m != nil {
		return m.NumberThreads
	}
	return 0
}

func (m *CPU) GetMinGhz() float64 {
	if m != nil {
		return m.MinGhz
	}
	return 0
}

func (m *CPU) GetMaxGhz() float64 {
	if m != nil {
		return m.MaxGhz
	}
	return 0
}

type GPU struct {
	Brand                string   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MinGhz               float64  `protobuf:"fixed64,3,opt,name=min_ghz,json=minGhz,proto3" json:"min_ghz,omitempty"`
	MixGhz               float64  `protobuf:"fixed64,4,opt,name=mix_ghz,json=mixGhz,proto3" json:"mix_ghz,omitempty"`
	Memory               *Memory  `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GPU) Reset()         { *m = GPU{} }
func (m *GPU) String() string { return proto.CompactTextString(m) }
func (*GPU) ProtoMessage()    {}
func (*GPU) Descriptor() ([]byte, []int) {
	return fileDescriptor_466578cecc6db379, []int{1}
}

func (m *GPU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPU.Unmarshal(m, b)
}
func (m *GPU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPU.Marshal(b, m, deterministic)
}
func (m *GPU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPU.Merge(m, src)
}
func (m *GPU) XXX_Size() int {
	return xxx_messageInfo_GPU.Size(m)
}
func (m *GPU) XXX_DiscardUnknown() {
	xxx_messageInfo_GPU.DiscardUnknown(m)
}

var xxx_messageInfo_GPU proto.InternalMessageInfo

func (m *GPU) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *GPU) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GPU) GetMinGhz() float64 {
	if m != nil {
		return m.MinGhz
	}
	return 0
}

func (m *GPU) GetMixGhz() float64 {
	if m != nil {
		return m.MixGhz
	}
	return 0
}

func (m *GPU) GetMemory() *Memory {
	if m != nil {
		return m.Memory
	}
	return nil
}

func init() {
	proto.RegisterType((*CPU)(nil), "pb.CPU")
	proto.RegisterType((*GPU)(nil), "pb.GPU")
}

func init() { proto.RegisterFile("processor_message.proto", fileDescriptor_466578cecc6db379) }

var fileDescriptor_466578cecc6db379 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xb1, 0x6a, 0xc3, 0x30,
	0x10, 0x40, 0x51, 0xec, 0xb8, 0xf4, 0xd2, 0x74, 0x10, 0x81, 0x88, 0x4e, 0xae, 0xa1, 0xe0, 0xc9,
	0x43, 0xfb, 0x09, 0x19, 0x3c, 0x15, 0x8a, 0x69, 0x67, 0x23, 0x25, 0x47, 0xec, 0x41, 0x92, 0x39,
	0xa5, 0x90, 0x7a, 0xef, 0xd7, 0xf4, 0x27, 0x8b, 0x4f, 0x2e, 0xb4, 0x74, 0xca, 0x26, 0xbd, 0x77,
	0xf0, 0x8e, 0x83, 0xed, 0x40, 0x7e, 0x8f, 0x21, 0x78, 0x6a, 0x2d, 0x86, 0xa0, 0x8f, 0x58, 0x0d,
	0xe4, 0x4f, 0x5e, 0x2e, 0x06, 0x73, 0xb7, 0xb1, 0x68, 0x3d, 0x7d, 0xfc, 0x35, 0xc5, 0x97, 0x80,
	0x64, 0xf7, 0xf2, 0x26, 0x37, 0xb0, 0x34, 0xa4, 0xdd, 0x41, 0x89, 0x5c, 0x94, 0xd7, 0x4d, 0xfc,
	0x48, 0x09, 0xa9, 0xd3, 0x16, 0xd5, 0x82, 0x21, 0xbf, 0xe5, 0x3d, 0xdc, 0xb8, 0x77, 0x6b, 0x90,
	0xda, 0xbd, 0x27, 0x0c, 0x2a, 0xc9, 0x45, 0xb9, 0x6e, 0x56, 0x91, 0xed, 0x26, 0x24, 0x1f, 0xe0,
	0x76, 0x1e, 0x39, 0x75, 0x84, 0xfa, 0x10, 0x54, 0xca, 0x43, 0xeb, 0x48, 0x5f, 0x23, 0x94, 0x5b,
	0xb8, 0xb2, 0xbd, 0x6b, 0x8f, 0xdd, 0xa8, 0x96, 0xb9, 0x28, 0x45, 0x93, 0xd9, 0xde, 0xd5, 0xdd,
	0xc8, 0x42, 0x9f, 0x59, 0x64, 0xb3, 0xd0, 0xe7, 0xba, 0x1b, 0x8b, 0x4f, 0x01, 0x49, 0x7d, 0xd1,
	0xb6, 0xbf, 0x1a, 0xc9, 0xbf, 0x46, 0x1f, 0x1b, 0xe9, 0x8f, 0x98, 0x1a, 0xb2, 0x80, 0x2c, 0x5e,
	0x8a, 0x97, 0x5a, 0x3d, 0x42, 0x35, 0x98, 0xea, 0x99, 0x49, 0x33, 0x1b, 0x93, 0xf1, 0xf1, 0x9e,
	0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf2, 0xac, 0x3b, 0xd8, 0x71, 0x01, 0x00, 0x00,
}
